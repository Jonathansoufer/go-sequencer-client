// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: frost-service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrostMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*FrostMessageData_Value
	Data isFrostMessageData_Data `protobuf_oneof:"data"`
}

func (x *FrostMessageData) Reset() {
	*x = FrostMessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrostMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrostMessageData) ProtoMessage() {}

func (x *FrostMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrostMessageData.ProtoReflect.Descriptor instead.
func (*FrostMessageData) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{0}
}

func (m *FrostMessageData) GetData() isFrostMessageData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *FrostMessageData) GetValue() string {
	if x, ok := x.GetData().(*FrostMessageData_Value); ok {
		return x.Value
	}
	return ""
}

type isFrostMessageData_Data interface {
	isFrostMessageData_Data()
}

type FrostMessageData_Value struct {
	Value string `protobuf:"bytes,1,opt,name=value,proto3,oneof"`
}

func (*FrostMessageData_Value) isFrostMessageData_Data() {}

type FrostMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string            `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	From      string            `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Data      *FrostMessageData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Signature string            `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *FrostMessage) Reset() {
	*x = FrostMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrostMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrostMessage) ProtoMessage() {}

func (x *FrostMessage) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrostMessage.ProtoReflect.Descriptor instead.
func (*FrostMessage) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{1}
}

func (x *FrostMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *FrostMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *FrostMessage) GetData() *FrostMessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FrostMessage) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type PolygonEdgeValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PolygonEdgeValidator) Reset() {
	*x = PolygonEdgeValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolygonEdgeValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolygonEdgeValidator) ProtoMessage() {}

func (x *PolygonEdgeValidator) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolygonEdgeValidator.ProtoReflect.Descriptor instead.
func (*PolygonEdgeValidator) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{2}
}

func (x *PolygonEdgeValidator) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MostSignificantBits  uint64 `protobuf:"varint,1,opt,name=most_significant_bits,json=mostSignificantBits,proto3" json:"most_significant_bits,omitempty"`
	LeastSignificantBits uint64 `protobuf:"varint,2,opt,name=least_significant_bits,json=leastSignificantBits,proto3" json:"least_significant_bits,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{3}
}

func (x *UUID) GetMostSignificantBits() uint64 {
	if x != nil {
		return x.MostSignificantBits
	}
	return 0
}

func (x *UUID) GetLeastSignificantBits() uint64 {
	if x != nil {
		return x.LeastSignificantBits
	}
	return 0
}

type SubmitFrostMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrostMessage *FrostMessage `protobuf:"bytes,1,opt,name=frost_message,json=frostMessage,proto3" json:"frost_message,omitempty"`
}

func (x *SubmitFrostMessageRequest) Reset() {
	*x = SubmitFrostMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitFrostMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitFrostMessageRequest) ProtoMessage() {}

func (x *SubmitFrostMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitFrostMessageRequest.ProtoReflect.Descriptor instead.
func (*SubmitFrostMessageRequest) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitFrostMessageRequest) GetFrostMessage() *FrostMessage {
	if x != nil {
		return x.FrostMessage
	}
	return nil
}

type SubmitFrostMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitFrostMessageResponse) Reset() {
	*x = SubmitFrostMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitFrostMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitFrostMessageResponse) ProtoMessage() {}

func (x *SubmitFrostMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitFrostMessageResponse.ProtoReflect.Descriptor instead.
func (*SubmitFrostMessageResponse) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{5}
}

type WatchFrostMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Provide a request_id to track response
	// topos.shared.v1.UUID request_id = 1;
	RequestId *UUID `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Define which command needs to be performed
	//
	// Types that are assignable to Command:
	//
	//	*WatchFrostMessagesRequest_OpenStream_
	Command isWatchFrostMessagesRequest_Command `protobuf_oneof:"command"`
}

func (x *WatchFrostMessagesRequest) Reset() {
	*x = WatchFrostMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFrostMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFrostMessagesRequest) ProtoMessage() {}

func (x *WatchFrostMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFrostMessagesRequest.ProtoReflect.Descriptor instead.
func (*WatchFrostMessagesRequest) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{6}
}

func (x *WatchFrostMessagesRequest) GetRequestId() *UUID {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (m *WatchFrostMessagesRequest) GetCommand() isWatchFrostMessagesRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *WatchFrostMessagesRequest) GetOpenStream() *WatchFrostMessagesRequest_OpenStream {
	if x, ok := x.GetCommand().(*WatchFrostMessagesRequest_OpenStream_); ok {
		return x.OpenStream
	}
	return nil
}

type isWatchFrostMessagesRequest_Command interface {
	isWatchFrostMessagesRequest_Command()
}

type WatchFrostMessagesRequest_OpenStream_ struct {
	OpenStream *WatchFrostMessagesRequest_OpenStream `protobuf:"bytes,2,opt,name=open_stream,json=openStream,proto3,oneof"`
}

func (*WatchFrostMessagesRequest_OpenStream_) isWatchFrostMessagesRequest_Command() {}

type WatchFrostMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the response is directly linked to a request this ID allow one to track it
	RequestId *UUID `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Event:
	//
	//	*WatchFrostMessagesResponse_StreamOpened_
	//	*WatchFrostMessagesResponse_FrostMessagePushed_
	Event isWatchFrostMessagesResponse_Event `protobuf_oneof:"event"`
}

func (x *WatchFrostMessagesResponse) Reset() {
	*x = WatchFrostMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFrostMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFrostMessagesResponse) ProtoMessage() {}

func (x *WatchFrostMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFrostMessagesResponse.ProtoReflect.Descriptor instead.
func (*WatchFrostMessagesResponse) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{7}
}

func (x *WatchFrostMessagesResponse) GetRequestId() *UUID {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (m *WatchFrostMessagesResponse) GetEvent() isWatchFrostMessagesResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *WatchFrostMessagesResponse) GetStreamOpened() *WatchFrostMessagesResponse_StreamOpened {
	if x, ok := x.GetEvent().(*WatchFrostMessagesResponse_StreamOpened_); ok {
		return x.StreamOpened
	}
	return nil
}

func (x *WatchFrostMessagesResponse) GetFrostMessagePushed() *WatchFrostMessagesResponse_FrostMessagePushed {
	if x, ok := x.GetEvent().(*WatchFrostMessagesResponse_FrostMessagePushed_); ok {
		return x.FrostMessagePushed
	}
	return nil
}

type isWatchFrostMessagesResponse_Event interface {
	isWatchFrostMessagesResponse_Event()
}

type WatchFrostMessagesResponse_StreamOpened_ struct {
	StreamOpened *WatchFrostMessagesResponse_StreamOpened `protobuf:"bytes,2,opt,name=stream_opened,json=streamOpened,proto3,oneof"`
}

type WatchFrostMessagesResponse_FrostMessagePushed_ struct {
	FrostMessagePushed *WatchFrostMessagesResponse_FrostMessagePushed `protobuf:"bytes,3,opt,name=frost_message_pushed,json=frostMessagePushed,proto3,oneof"`
}

func (*WatchFrostMessagesResponse_StreamOpened_) isWatchFrostMessagesResponse_Event() {}

func (*WatchFrostMessagesResponse_FrostMessagePushed_) isWatchFrostMessagesResponse_Event() {}

// Sent once to start receiving events and being able to send further command
type WatchFrostMessagesRequest_OpenStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorIds []*PolygonEdgeValidator `protobuf:"bytes,1,rep,name=validator_ids,json=validatorIds,proto3" json:"validator_ids,omitempty"`
}

func (x *WatchFrostMessagesRequest_OpenStream) Reset() {
	*x = WatchFrostMessagesRequest_OpenStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFrostMessagesRequest_OpenStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFrostMessagesRequest_OpenStream) ProtoMessage() {}

func (x *WatchFrostMessagesRequest_OpenStream) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFrostMessagesRequest_OpenStream.ProtoReflect.Descriptor instead.
func (*WatchFrostMessagesRequest_OpenStream) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *WatchFrostMessagesRequest_OpenStream) GetValidatorIds() []*PolygonEdgeValidator {
	if x != nil {
		return x.ValidatorIds
	}
	return nil
}

// Sent by the TCE when the stream is ready to be used and that certificates will start being push
type WatchFrostMessagesResponse_StreamOpened struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorIds []*PolygonEdgeValidator `protobuf:"bytes,1,rep,name=validator_ids,json=validatorIds,proto3" json:"validator_ids,omitempty"`
}

func (x *WatchFrostMessagesResponse_StreamOpened) Reset() {
	*x = WatchFrostMessagesResponse_StreamOpened{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFrostMessagesResponse_StreamOpened) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFrostMessagesResponse_StreamOpened) ProtoMessage() {}

func (x *WatchFrostMessagesResponse_StreamOpened) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFrostMessagesResponse_StreamOpened.ProtoReflect.Descriptor instead.
func (*WatchFrostMessagesResponse_StreamOpened) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *WatchFrostMessagesResponse_StreamOpened) GetValidatorIds() []*PolygonEdgeValidator {
	if x != nil {
		return x.ValidatorIds
	}
	return nil
}

// Main message pushed to the stream
type WatchFrostMessagesResponse_FrostMessagePushed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrostMessage *FrostMessage `protobuf:"bytes,1,opt,name=frost_message,json=frostMessage,proto3" json:"frost_message,omitempty"`
}

func (x *WatchFrostMessagesResponse_FrostMessagePushed) Reset() {
	*x = WatchFrostMessagesResponse_FrostMessagePushed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frost_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFrostMessagesResponse_FrostMessagePushed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFrostMessagesResponse_FrostMessagePushed) ProtoMessage() {}

func (x *WatchFrostMessagesResponse_FrostMessagePushed) ProtoReflect() protoreflect.Message {
	mi := &file_frost_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFrostMessagesResponse_FrostMessagePushed.ProtoReflect.Descriptor instead.
func (*WatchFrostMessagesResponse_FrostMessagePushed) Descriptor() ([]byte, []int) {
	return file_frost_service_proto_rawDescGZIP(), []int{7, 1}
}

func (x *WatchFrostMessagesResponse_FrostMessagePushed) GetFrostMessage() *FrostMessage {
	if x != nil {
		return x.FrostMessage
	}
	return nil
}

var File_frost_service_proto protoreflect.FileDescriptor

var file_frost_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70,
	0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x32, 0x0a, 0x10, 0x46, 0x72,
	0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x99,
	0x01, 0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x50, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x70, 0x0a, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x6d, 0x6f, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x65, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x62, 0x69,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x22, 0x63,
	0x0a, 0x19, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x66,
	0x72, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x72, 0x6f,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x9c, 0x02, 0x0a, 0x19, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f,
	0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x5c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x4e, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74,
	0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0xfa, 0x03, 0x0a, 0x1a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f,
	0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x63, 0x0a, 0x0d, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x76,
	0x0a, 0x14, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x74,
	0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x72,
	0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x12, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x1a, 0x5e, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x1a, 0x5c, 0x0a, 0x12, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0d,
	0x66, 0x72, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f,
	0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x83, 0x02,
	0x0a, 0x0f, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x75, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2e,
	0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x0f, 0x5a, 0x0d, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frost_service_proto_rawDescOnce sync.Once
	file_frost_service_proto_rawDescData = file_frost_service_proto_rawDesc
)

func file_frost_service_proto_rawDescGZIP() []byte {
	file_frost_service_proto_rawDescOnce.Do(func() {
		file_frost_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_frost_service_proto_rawDescData)
	})
	return file_frost_service_proto_rawDescData
}

var file_frost_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_frost_service_proto_goTypes = []interface{}{
	(*FrostMessageData)(nil),                              // 0: topos.topos_node.v1.FrostMessageData
	(*FrostMessage)(nil),                                  // 1: topos.topos_node.v1.FrostMessage
	(*PolygonEdgeValidator)(nil),                          // 2: topos.topos_node.v1.PolygonEdgeValidator
	(*UUID)(nil),                                          // 3: topos.topos_node.v1.UUID
	(*SubmitFrostMessageRequest)(nil),                     // 4: topos.topos_node.v1.SubmitFrostMessageRequest
	(*SubmitFrostMessageResponse)(nil),                    // 5: topos.topos_node.v1.SubmitFrostMessageResponse
	(*WatchFrostMessagesRequest)(nil),                     // 6: topos.topos_node.v1.WatchFrostMessagesRequest
	(*WatchFrostMessagesResponse)(nil),                    // 7: topos.topos_node.v1.WatchFrostMessagesResponse
	(*WatchFrostMessagesRequest_OpenStream)(nil),          // 8: topos.topos_node.v1.WatchFrostMessagesRequest.OpenStream
	(*WatchFrostMessagesResponse_StreamOpened)(nil),       // 9: topos.topos_node.v1.WatchFrostMessagesResponse.StreamOpened
	(*WatchFrostMessagesResponse_FrostMessagePushed)(nil), // 10: topos.topos_node.v1.WatchFrostMessagesResponse.FrostMessagePushed
}
var file_frost_service_proto_depIdxs = []int32{
	0,  // 0: topos.topos_node.v1.FrostMessage.data:type_name -> topos.topos_node.v1.FrostMessageData
	1,  // 1: topos.topos_node.v1.SubmitFrostMessageRequest.frost_message:type_name -> topos.topos_node.v1.FrostMessage
	3,  // 2: topos.topos_node.v1.WatchFrostMessagesRequest.request_id:type_name -> topos.topos_node.v1.UUID
	8,  // 3: topos.topos_node.v1.WatchFrostMessagesRequest.open_stream:type_name -> topos.topos_node.v1.WatchFrostMessagesRequest.OpenStream
	3,  // 4: topos.topos_node.v1.WatchFrostMessagesResponse.request_id:type_name -> topos.topos_node.v1.UUID
	9,  // 5: topos.topos_node.v1.WatchFrostMessagesResponse.stream_opened:type_name -> topos.topos_node.v1.WatchFrostMessagesResponse.StreamOpened
	10, // 6: topos.topos_node.v1.WatchFrostMessagesResponse.frost_message_pushed:type_name -> topos.topos_node.v1.WatchFrostMessagesResponse.FrostMessagePushed
	2,  // 7: topos.topos_node.v1.WatchFrostMessagesRequest.OpenStream.validator_ids:type_name -> topos.topos_node.v1.PolygonEdgeValidator
	2,  // 8: topos.topos_node.v1.WatchFrostMessagesResponse.StreamOpened.validator_ids:type_name -> topos.topos_node.v1.PolygonEdgeValidator
	1,  // 9: topos.topos_node.v1.WatchFrostMessagesResponse.FrostMessagePushed.frost_message:type_name -> topos.topos_node.v1.FrostMessage
	4,  // 10: topos.topos_node.v1.FrostAPIService.SubmitFrostMessage:input_type -> topos.topos_node.v1.SubmitFrostMessageRequest
	6,  // 11: topos.topos_node.v1.FrostAPIService.WatchFrostMessages:input_type -> topos.topos_node.v1.WatchFrostMessagesRequest
	5,  // 12: topos.topos_node.v1.FrostAPIService.SubmitFrostMessage:output_type -> topos.topos_node.v1.SubmitFrostMessageResponse
	7,  // 13: topos.topos_node.v1.FrostAPIService.WatchFrostMessages:output_type -> topos.topos_node.v1.WatchFrostMessagesResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_frost_service_proto_init() }
func file_frost_service_proto_init() {
	if File_frost_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frost_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrostMessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrostMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolygonEdgeValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitFrostMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitFrostMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFrostMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFrostMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFrostMessagesRequest_OpenStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFrostMessagesResponse_StreamOpened); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frost_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFrostMessagesResponse_FrostMessagePushed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_frost_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FrostMessageData_Value)(nil),
	}
	file_frost_service_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*WatchFrostMessagesRequest_OpenStream_)(nil),
	}
	file_frost_service_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*WatchFrostMessagesResponse_StreamOpened_)(nil),
		(*WatchFrostMessagesResponse_FrostMessagePushed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frost_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frost_service_proto_goTypes,
		DependencyIndexes: file_frost_service_proto_depIdxs,
		MessageInfos:      file_frost_service_proto_msgTypes,
	}.Build()
	File_frost_service_proto = out.File
	file_frost_service_proto_rawDesc = nil
	file_frost_service_proto_goTypes = nil
	file_frost_service_proto_depIdxs = nil
}
